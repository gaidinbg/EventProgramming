@model AssignmentManager.Models.AssignmentViewModel

@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>

@using(Html.BeginForm("Update", "Assignment")) 
{
    @Html.ValidationSummary()
     @Html.HiddenFor(model => model.CreatedAt)
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="clearfix">
                    <div class="form-group">

                        @Html.LabelFor(model => model.Title, "Title:") @**Atribut specificirasht, kakvo iskame tochno da puishe na label-a vmesto da vzeme tova koeto e vkarano za title.**@
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })  @*lambda expression, mozhe da zapishem kakvoto iskame*@

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="clearfix">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Title:") @*Atribut specificirasht, kakvo iskame tochno da puishe na label-a vmesto da vzeme tova koeto e vkarano za title.*@
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", row = 5 })  @*lambda expression, mozhe da zapishem kakvoto iskame*@

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => Model.isDone, "Done:" )
                    @Html.CheckBoxFor(model => Model.isDone)
                </div>
            </div>
        </div>

        <div class="row">

            <input type="submit" value="create" class="btn btn-success" />
        </div>

    </div>
}